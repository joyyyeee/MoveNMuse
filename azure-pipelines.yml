# Azure Pipelines: Build client+server and deploy to Azure App Service (Linux)

trigger:
- main

variables:
  azureSubscription: 'YOUR_SERVICE_CONNECTION_NAME'   # Prefer the service connection NAME
  webAppName: 'movenmuse'                             # Your existing App Service name
  environmentName: 'movenmuse'
  vmImageName: 'ubuntu-latest'
  nodeVersion: '22.x'
  clientBuildDir: 'client/dist'                       # Use 'client/build' for CRA
  serverDir: 'server'
  artifactName: 'drop'
  packageName: 'app.zip'

stages:
# ---------------- Build ----------------
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build & Package
    pool:
      vmImage: $(vmImageName)
    steps:
      - checkout: self
        fetchDepth: 1

      # Use Node 22 everywhere
      - task: NodeTool@0
        displayName: 'Use Node $(nodeVersion)'
        inputs:
          versionSpec: $(nodeVersion)

      # Backend install + build
      - script: |
          cd $(serverDir)
          npm ci
          npm run build
        displayName: 'Backend: Install & build'

      # Frontend install + build
      - script: |
          cd client
          npm ci
          npm run build
        workingDirectory: .
        displayName: 'Frontend: Install & build'

      # Copy client build into server's public/static folder
      # Adjust destination to match how your server serves static files.
      - task: CopyFiles@2
        displayName: 'Copy client build into server'
        inputs:
          SourceFolder: '$(clientBuildDir)'
          Contents: '**'
          TargetFolder: '$(serverDir)/public'        # change if your server serves another dir

      # Create deployable zip from the server folder (includes server code + copied client build)
      - task: ArchiveFiles@2
        displayName: 'Archive deployable app'
        inputs:
          rootFolderOrFile: '$(serverDir)'
          includeRootFolder: false
          archiveType: zip
          archiveFile: '$(Build.ArtifactStagingDirectory)/$(packageName)'
          replaceExistingArchive: true

      - publish: '$(Build.ArtifactStagingDirectory)/$(packageName)'
        displayName: 'Publish artifact'
        artifact: $(artifactName)

# ---------------- Deploy ----------------
- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy to Azure App Service (Linux)
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
            - download: current
              artifact: $(artifactName)

            - task: AzureRmWebAppDeployment@4
              displayName: 'Azure App Service Deploy: $(webAppName)'
              inputs:
                azureSubscription: $(azureSubscription)
                appType: webAppLinux
                WebAppName: $(webAppName)
                packageForLinux: '$(Pipeline.Workspace)/$(artifactName)/$(packageName)'
                RuntimeStack: 'NODE|22'
                StartupCommand: 'npm start'
