trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  azureSubscription: 'Azure subscription 1 (a1473455-f01a-4afc-bafd-87af5d04d9f7)'
  webAppName: 'movenmuse'
  nodeVersion: '22.x'

steps:
# Use Node 22
- task: NodeTool@0
  inputs:
    versionSpec: $(nodeVersion)
  displayName: 'Use Node $(nodeVersion)'

# Cache npm packages to speed up builds
- task: Cache@2
  inputs:
    key: 'npm | "$(Agent.OS)" | package-lock.json'
    path: ~/.npm
  displayName: 'Cache npm dependencies'

# Backend install + build
- script: |
    cd server
    npm ci
    npm run build
  displayName: 'Backend: Install dependencies and build'

# Frontend install + build
- script: |
    cd client
    npm ci
    npm run build
  displayName: 'Frontend: Install dependencies and build'

# Copy frontend build into server/public
- task: CopyFiles@2
  inputs:
    SourceFolder: 'client/dist'   # or client/build if CRA
    Contents: '**'
    TargetFolder: 'server/public'
  displayName: 'Copy frontend into server/public'

# Archive only required backend files (exclude node_modules/tests)
# This step is what fixes the long deployment time
- script: |
    cd server
    echo "Cleaning up unnecessary files..."
    rm -rf node_modules tests coverage *.log
    echo "Creating minimal deployment zip..."
    zip -r ../$(Build.ArtifactStagingDirectory)/app.zip . \
      -x "node_modules/*" "tests/*" "*.log"
  displayName: 'Archive app (exclude node_modules, tests, logs)'

# Publish artifact for deploy
- publish: '$(Build.ArtifactStagingDirectory)/app.zip'
  artifact: drop
  displayName: 'Publish deployment artifact'

# Deploy to Azure App Service
- task: AzureRmWebAppDeployment@4
  inputs:
    azureSubscription: $(azureSubscription)
    appType: webAppLinux
    WebAppName: $(webAppName)
    packageForLinux: '$(Build.ArtifactStagingDirectory)/app.zip'
    RuntimeStack: 'NODE|22'
    StartupCommand: 'npm start'
    deploymentMethod: 'runFromPackage'
  displayName: 'Deploy to App Service (Run From Package)'
